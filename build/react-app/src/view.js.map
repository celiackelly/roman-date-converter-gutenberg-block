{"version":3,"file":"react-app/src/view.js","mappings":"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","sources":["webpack://roman-date-converter/./src/react-app/src/components/Button.js","webpack://roman-date-converter/./src/react-app/src/components/CardSection.js","webpack://roman-date-converter/./src/react-app/src/components/DateConverter.js","webpack://roman-date-converter/./src/react-app/src/components/DateFieldset.js","webpack://roman-date-converter/./src/react-app/src/components/OptionsFieldset.js","webpack://roman-date-converter/./src/react-app/src/utils/dateConversions.js","webpack://roman-date-converter/external window [\"wp\",\"element\"]","webpack://roman-date-converter/webpack/bootstrap","webpack://roman-date-converter/webpack/runtime/compat get default export","webpack://roman-date-converter/webpack/runtime/define property getters","webpack://roman-date-converter/webpack/runtime/hasOwnProperty shorthand","webpack://roman-date-converter/webpack/runtime/make namespace object","webpack://roman-date-converter/./src/react-app/src/view.js"],"sourcesContent":["import { React } from '@wordpress/element';\n\nexport default function Button({ type, buttonText, onClick }) {\n  return (\n    <button \n        type={type} \n        onClick={onClick}>\n        {buttonText}\n    </button>\n  )\n}\n","import { React } from '@wordpress/element';\n\nexport default function CardSection( {title, className, children} ) {\n  return (\n    <section className={className + \" card\"}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n  )\n}\n","import { React, useState} from '@wordpress/element';\nimport CardSection from './CardSection';\nimport DateFieldset from './DateFieldset';\nimport OptionsFieldset from './OptionsFieldset';\nimport Button from './Button';\nimport { outputFormattedRomanDate, \n        normalizeFormData, \n        abbreviateDate, \n        abbreviateYear,\n        checkBeforeRomeFounded } from '../utils/dateConversions'\n\nexport default function DateConverter() {\n    const today = new Date()  \n    const [month, setMonth] = useState(today.getMonth() + 1)\n    const [day, setDay] = useState(today.getDate())   \n    const [year, setYear] = useState(today.getFullYear())\n    const [era, setEra] = useState('A.D. / C.E.')\n    const [isDisplayYearChecked, setIsDisplayYearChecked] = useState(true)\n    const [yearDisplayOption, setYearDisplayOption] = useState('secularNotation')\n    const [isDateSubmitted, setIsDateSubmitted] = useState(false)\n    const [submittedFormData, setSubmittedFormData] = useState(null) \n    const [isAbbreviatedChecked, setIsAbbreviatedChecked] = useState(false)\n\n    const { romanDate, formattedYear } = submittedFormData ? outputFormattedRomanDate(submittedFormData) : { romanDate: null, formattedYear: null }\n\n    function handleMonthChange(e) {\n        const isBeforeRomeFounded = checkBeforeRomeFounded(day, e.target.value, year, era)\n        if (isBeforeRomeFounded) { setYearDisplayOption(null) }\n        setMonth(Number(e.target.value)) \n    }\n\n    function handleDayChange(e) {\n        const isBeforeRomeFounded = checkBeforeRomeFounded(e.target.value, month, year, era)\n        if (isBeforeRomeFounded) { setYearDisplayOption(null) }\n        setDay(Number(e.target.value)) \n    }\n\n   function handleYearChange(e) {\n        const isBeforeRomeFounded = checkBeforeRomeFounded(day, month, e.target.value, era)\n        if (isBeforeRomeFounded) { setYearDisplayOption(null) }\n        setYear(Number(e.target.value));\n   }\n\n   function handleEraChange(e) {\n        const isBeforeRomeFounded = checkBeforeRomeFounded(day, month, year, e.target.value)\n        if (isBeforeRomeFounded) { setYearDisplayOption(null) }\n        setEra(e.target.value);\n    }\n\n    function handleDisplayYearChange(e) {\n        if (!e.target.checked) { setYearDisplayOption(null) }\n        const isBeforeRomeFounded = checkBeforeRomeFounded(day, month, year, era)\n        if (isBeforeRomeFounded) { setYearDisplayOption(null) }\n        setIsDisplayYearChecked(!isDisplayYearChecked);\n    }\n\n    function handleYearDisplayOptionChange(e) {\n        setYearDisplayOption(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        // Prevent the browser from reloading the page\n        e.preventDefault();\n\n        // Read the form data\n        const formData = new FormData(e.target); \n\n        //normalize submitted form data and save in state\n        setSubmittedFormData(normalizeFormData(formData))\n\n        //Change state so results card is shown instead of form \n        setIsDateSubmitted(true)\n    }\n\n    function changeOptions() {   \n        setDay(submittedFormData.day)\n        setMonth(submittedFormData.month)\n        setYear(submittedFormData.year)\n        setEra(submittedFormData.era)\n        setIsDisplayYearChecked(submittedFormData.displayYear)\n        setYearDisplayOption(submittedFormData.yearDisplayOption)\n        setIsAbbreviatedChecked(false)\n\n        //Change state so form is shown \n        setIsDateSubmitted(false)  \n    }\n\n    function resetDate() {\n        setDay(today.getDate())\n        setMonth(today.getMonth() + 1)\n        setYear(today.getFullYear())\n        setEra('A.D. / C.E.')\n        setIsDisplayYearChecked(true)\n        setYearDisplayOption(null)\n        setIsAbbreviatedChecked(false)\n        setSubmittedFormData(null)\n    }\n\n    if (!isDateSubmitted) {\n        return (\n          <CardSection className=\"form-card\" title=\"Find the Roman date for:\">\n            <form method=\"post\" onSubmit={handleSubmit}>\n                <DateFieldset \n                    month={month}\n                    handleMonthChange={handleMonthChange}\n                    day={day}\n                    handleDayChange={handleDayChange}\n                    year={year} \n                    handleYearChange={handleYearChange}\n                    era={era}\n                    handleEraChange={handleEraChange}/>\n                <OptionsFieldset \n                    isBeforeRomeFounded={checkBeforeRomeFounded(day, month, year, era)}\n                    isDisplayYearChecked={isDisplayYearChecked}\n                    handleDisplayYearChange={handleDisplayYearChange}\n                    yearDisplayOption={yearDisplayOption}\n                    handleYearDisplayOptionChange={handleYearDisplayOptionChange}\n                    />  \n                <div className='btn-group'>\n                    <Button \n                        type=\"submit\" \n                        buttonText=\"Submit\" />    \n                </div>\n            </form>\n          </CardSection>\n        );\n      } else {\n          return (\n            <CardSection className=\"results-card\" title=\"Roman date:\">\n                <div>\n                    <p>{isAbbreviatedChecked ? abbreviateDate(romanDate) : romanDate}</p>\n                    <p>{isAbbreviatedChecked ? abbreviateYear(formattedYear) : formattedYear}</p>\n                </div>\n                <label>\n                    <input type=\"checkbox\" name=\"abbreviated\" checked={isAbbreviatedChecked} onChange={ (e)=> setIsAbbreviatedChecked(!isAbbreviatedChecked)}></input>\n                    display abbreviated date\n                </label>\n                <div className='btn-group'>\n                    <Button \n                        type=\"button\" \n                        buttonText=\"Change options\" \n                        onClick={changeOptions}/>\n                    <Button \n                        type=\"button\" \n                        buttonText=\"Convert another date\" \n                        onClick={() => { \n                            setIsDateSubmitted(false); \n                            resetDate() }}/>\n                </div>\n            </CardSection>\n          );\n      }\n}\n","import { React } from '@wordpress/element';\nimport { checkLeapYear } from '../utils/dateConversions'\n\nexport default function DateFieldset({ month, day, year, handleMonthChange, handleDayChange, handleYearChange, era, handleEraChange }) {\n\n  function calcDaysInMonth() {\n    let daysCount = 31\n    if (month === 4 || month === 6 || month === 9 || month === 11) {\n        daysCount = 30\n    }\n    if (month === 2) {\n        daysCount = !checkLeapYear(year) ? 28 : 29\n    } \n    return daysCount\n  }  \n  const dayOptions = Array.from(\n    {length: calcDaysInMonth()}, \n    (_, i) => (\n        <option key={i + 1} value={i + 1}>{i + 1}</option>\n    )\n  )\n\n  return (\n    <fieldset>\n        {/* add a legend */}\n        <label><span className=\"sr-only\">Month</span>\n            <select name=\"month\" value={month} onChange={handleMonthChange}>\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n            </select>\n        </label>\n        <label><span className=\"sr-only\">Day</span>\n            <select name=\"day\" value={day} onChange={handleDayChange}>\n                {dayOptions}\n            </select>\n        </label>\n        <label><span className=\"sr-only\">Year</span>\n            <input name=\"year\" \n                type=\"number\" min=\"1\" max=\"3999\" step=\"1\" value={year} \n                onChange={handleYearChange}>\n            </input>\n        </label>\n        <label><span className=\"sr-only\">Era</span>\n            <select name=\"era\" \n                    value={era} \n                    onChange={handleEraChange}>\n                <option value=\"A.D. / C.E.\">A.D. / C.E.</option>\n                <option value=\"B.C. / B.C.E.\">B.C. / B.C.E.</option>\n            </select>\n        </label>\n    </fieldset>\n  )\n}\n","import { React } from '@wordpress/element';\n\nexport default function OptionsFieldset({ \n    isBeforeRomeFounded, \n    isDisplayYearChecked, \n    handleDisplayYearChange,\n    yearDisplayOption,\n    handleYearDisplayOptionChange\n}) {\n\n    const yearDisplayOptionsRadio = (\n        <>\n            <label>\n                <input required \n                    type=\"radio\" \n                    name=\"yearDisplayOption\" \n                    value=\"secularNotation\"\n                    checked={yearDisplayOption === \"secularNotation\"}\n                    onChange={handleYearDisplayOptionChange}></input>\n                display year in secular notation\n            </label>\n            <label>\n                <input required \n                    type=\"radio\" \n                    name=\"yearDisplayOption\" \n                    value=\"christianNotation\"\n                    checked={yearDisplayOption === \"christianNotation\"}\n                    onChange={handleYearDisplayOptionChange}></input>\n                display year in Christian notation\n            </label>\n            <label>\n                <input required \n                    type=\"radio\" \n                    name=\"yearDisplayOption\" \n                    value=\"AUCNotation\"\n                    checked={yearDisplayOption === \"AUCNotation\"}\n                    onChange={handleYearDisplayOptionChange}\n                    disabled={isBeforeRomeFounded || !isDisplayYearChecked}>\n                </input>\n                display year <span className=\"italics\">ab urbe condita</span>\n            </label>\n        </>\n    )  \n\n  return (\n    <fieldset className=\"options-fieldset\">\n        {/* add a legend */}\n        <label>\n            <input type=\"checkbox\" name=\"displayYear\" \n                onChange={handleDisplayYearChange}\n                checked={isDisplayYearChecked}></input>\n            display year\n        </label>\n        {isDisplayYearChecked ? yearDisplayOptionsRadio : null}\n    </fieldset>\n  )\n}\n","function integerToRomanNumeral(num) {\n    //max integer you can express in Roman numerals without a line over is 3999\n    const map = {\n      M: 1000,\n      CM: 900,\n      D: 500,\n      CD: 400,\n      C: 100,\n      XC: 90,\n      L: 50,\n      XL: 40,\n      X: 10,\n      IX: 9,\n      V: 5,\n      IV: 4,\n      I: 1,\n    };\n    let result = '';\n    \n    for (let key in map) {  \n      const repeatCounter = Math.floor(num / map[key]);\n      \n      if (repeatCounter !== 0) {\n        result += key.repeat(repeatCounter);\n      }\n      \n      num %= map[key];\n      \n      if (num === 0) return result;\n    }\n    \n    return result;\n}\n\nfunction calculateMarkerDays(day, month, year) {\n    // calculate the Ides and Nones for the input month, and the Kalends for the next month\n    const markerDays = {}\n\n    // set the Ides and Nones for the month\n    switch(month) {\n        // March, July, October, May, the Ides are on the 15th day\n        case 3: \n        case 5: \n        case 7: \n        case 10: \n            markerDays.ides = 15;\n            markerDays.nones = 7;\n            break;\n        default: \n            markerDays.ides = 13;\n            markerDays.nones = 5;\n            break;\n    }\n\n    // set the Kalends for the next month; for easier math, this is the days in the month + 1\n    switch(month) {\n        // 30 days have Sep, Apr, Jun, and Nov\n        case 4:\n        case 6: \n        case 9: \n        case 11: \n            markerDays.kalends = 31;\n            break;\n        // The Roman calendar inserts the leap day after Feb 24th - only dates after that will be affected\n        case 2: \n            markerDays.kalends = checkLeapYear(year) && day > 24 ? 30 : 29\n            break;\n        default: \n            markerDays.kalends = 32;\n            break;\n    }\n    return markerDays\n}\n\nfunction convertToRomanDate(day, month, year) {\n    //create a dictionary of months with accusative and ablative forms\n    const months = {\n        1: { acc: \"Ianuarias\", abl: \"Ianuariis\" }, \n        2: { acc: \"Februarias\", abl: \"Februariis\" } ,\n        3: { acc: \"Martias\", abl: \"Martiis\"},  \n        4: { acc: \"Apriles\", abl: \"Aprilibus\"},  \n        5: { acc: \"Maias\", abl: \"Maiis\"},\n        6: { acc: \"Iunias\", abl: \"Iuniis\"}, \n        7: { acc: \"Iulias\", abl: \"Iuliis\"},\n        8: { acc: \"Augustas\", abl: \"Augustis\"},\n        9: { acc: \"Septembres\", abl: \"Septembribus\"},\n        10: { acc: \"Octobres\", abl: \"Octobribus\"},\n        11: { acc: \"Novembres\", abl: \"Novembribus\"},\n        12: { acc: \"Decembres\", abl: \"Decembribus\"},    \n    }\n\n    // calculate the Ides and Nones for the input month, and the Kalends for the next month\n    const markerDays = calculateMarkerDays(day, month, year)\n\n    //calculate the Roman date string (month + day)\n    let romanDate\n    switch(day) {\n        //start with the days that fall on the Kalends, Ides, Nones\n        case 1: \n            romanDate = `Kalendis ${months[month].abl}`;\n            break;\n        case markerDays.nones: \n            romanDate =`Nonis ${months[month].abl}`;\n            break;\n        case markerDays.ides: \n            romanDate =`Idibus ${months[month].abl}`;\n            break;\n\n        // Other days will countdown to the next epoch\n\t\tdefault:\n            //calculate the countdown and start the romanDate string\n            let countdown\n            if (day < markerDays.nones) {\n                countdown = markerDays.nones - day + 1  // countdown Roman style, with inclusive counting\n                romanDate =`Nonas ${months[month].acc}`;    // start the romanDate string\n            } else if (day < markerDays.ides) {\n                countdown = markerDays.ides - day + 1  // countdown Roman style\n                romanDate =`Idus ${months[month].acc}`;    // start the romanDate string\n            } else {\n                // if the date is after the Ides, count down to the Kalends of the next month\n                countdown = markerDays.kalends - day + 1  // countdown Roman style\n                romanDate =`Kalendas ${months[month === 12 ? 1 : month + 1].acc}`;    // start the romanDate string\n            }\n\n            // pridie (the day before) is 2 days before the marker day \n            if (countdown === 2) { \n                romanDate = `pridie ${romanDate}`\n            } else {\n                const romanNumeralDay = integerToRomanNumeral(countdown).toLowerCase()\n\n                // normally we just count down, but Feb 25 of a leap year is weird- it's called \"ante diem bis vi Kalendas Martias...\"\n                const leapYearModifier = checkLeapYear(year) && day === 25 ? 'bis ' : ''\n\n                romanDate = `ante diem ${leapYearModifier}${romanNumeralDay} ${romanDate}`\n            }  \n            break;\n    }\n    return romanDate\n}\n\nfunction formatYear(year, era, yearDisplayOption) {\n    let notation \n\n    if (yearDisplayOption === 'AUCNotation') {\n        if (era === 'A.D. / C.E.') { \n            year = year + 753 \n        } else {\n            year = 754 - year\n        }\n        notation = 'ab urbe condita'\n    } \n    //otherwise, it's B.C or A.D, in secular or Christian notation - 4 possibilities\n    if (yearDisplayOption === 'secularNotation') {\n        notation = (era === 'B.C. / B.C.E.') ? 'ante aeram vulgarem' : 'aerae vulgaris'\n    }\n\n    if (yearDisplayOption === 'christianNotation') {\n        notation = (era === 'B.C. / B.C.E.') ? 'ante Christum natum' : 'post Christum natum'\n    }\n\n    return `anno ${integerToRomanNumeral(year)} ${notation}`\n}\n\nexport function checkLeapYear(year) {\n    if (year % 4 !== 0) { return false }\n    // a year that is evenly divisible by 100 (for example, 1900) is a leap year only if it is also evenly divisible by 400.\n    if (year % 100 === 0) { \n        return year % 400 === 0 ? true : false\n    }\n    return true\n}\n\nexport function checkBeforeRomeFounded(day, month, year, era) {\n    month = Number(month)\n    day = Number(day)\n\n    //if it's C.E., it's definitely not before the founding\n    if (era === 'A.D. / C.E.') { return false }\n\n    //if it's B.C.E. and the year is greater/earlier than 753, it's before the founding\n    if (year > 753) { return true }\n    if (year < 753) { return false}\n\n    if (year === 753) {\n        if (month < 4) { \n            return true \n        } else if (month > 4) {\n            return false \n        } else if (day < 21) {   //if we're in April and the day is before April 21, it's before\n            return true \n        } else { \n            return false \n        }\n    }\n}\n\nexport function normalizeFormData(formData) {\n    const formJson = Object.fromEntries(formData.entries());\n    const normalizedData = { ...formJson }\n\n    normalizedData.day = Number(normalizedData.day)\n    normalizedData.month = Number(normalizedData.month)\n    normalizedData.year = Number(normalizedData.year)\n    \n    //by default in HTML, if a checkbox is checked, the data is submitted with the value \"on\"; else no data for that checkbox is sent. \n    normalizedData.displayYear ?  normalizedData.displayYear = true : normalizedData.displayYear = false\n    if (!normalizedData.yearDisplayOption) { normalizedData.yearDisplayOption = null }\n    \n    return normalizedData\n}\n\nexport function abbreviateDate(dateString) {\n    let abbreviatedDate = dateString\n\n    abbreviatedDate = abbreviatedDate.replace('ante diem', 'a.d.')\n\n    //abbreviate day/month; remember to include periods\n    abbreviatedDate = abbreviatedDate.replace(/(prid|Kal|Id|Non|Ian|Feb|Mart|Apr|Aug|Sept|Oct|Nov|Dec)\\w+/g, '$1.')\n\n    return abbreviatedDate\n}\n\nexport function abbreviateYear(yearString) {\n    let abbreviatedYear = yearString\n\n    //abbreviate year notation \n    abbreviatedYear = abbreviatedYear.replace('ab urbe condita', 'A.U.C.')\n    abbreviatedYear = abbreviatedYear.replace('ante aeram vulgarem', 'ante aer. vulg.')\n    abbreviatedYear = abbreviatedYear.replace('aerae vulgaris', 'aer. vulg.')\n    abbreviatedYear = abbreviatedYear.replace('ante Christum natum', 'a.C.n.')\n    abbreviatedYear = abbreviatedYear.replace('post Christum natum', 'p.C.n.')\n\n    return abbreviatedYear\n}\n\nexport function outputFormattedRomanDate(formData) {\n    const { day, \n            displayYear, \n            era, \n            month, \n            year, \n            yearDisplayOption } = formData\n    \n    const romanDate = convertToRomanDate(day, month, year)\n\n    const formattedYear = displayYear ? formatYear(year, era, yearDisplayOption) : ''\n\n    return {\n        romanDate: romanDate, \n        formattedYear: formattedYear\n    }\n}","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot, render, createElement } from '@wordpress/element';\nimport DateConverter from './components/DateConverter';\n\nfunction App() {\n  return (\n    <DateConverter />\n  );\n}\n\n\naddEventListener(\"DOMContentLoaded\", (event) => {\n  const domElement = document.getElementById( 'react-app' );\n  const uiElement = createElement( App );\n\n  if ( createRoot ) {\n    createRoot( domElement ).render( uiElement );\n  } else {\n    render( uiElement, domElement );\n  }\n});"],"names":["React","Button","_ref","type","buttonText","onClick","createElement","CardSection","title","className","children","useState","DateFieldset","OptionsFieldset","outputFormattedRomanDate","normalizeFormData","abbreviateDate","abbreviateYear","checkBeforeRomeFounded","DateConverter","today","Date","month","setMonth","getMonth","day","setDay","getDate","year","setYear","getFullYear","era","setEra","isDisplayYearChecked","setIsDisplayYearChecked","yearDisplayOption","setYearDisplayOption","isDateSubmitted","setIsDateSubmitted","submittedFormData","setSubmittedFormData","isAbbreviatedChecked","setIsAbbreviatedChecked","romanDate","formattedYear","handleMonthChange","e","isBeforeRomeFounded","target","value","Number","handleDayChange","handleYearChange","handleEraChange","handleDisplayYearChange","checked","handleYearDisplayOptionChange","handleSubmit","preventDefault","formData","FormData","changeOptions","displayYear","resetDate","method","onSubmit","name","onChange","checkLeapYear","calcDaysInMonth","daysCount","dayOptions","Array","from","length","_","i","key","min","max","step","yearDisplayOptionsRadio","Fragment","required","disabled","integerToRomanNumeral","num","map","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","result","repeatCounter","Math","floor","repeat","calculateMarkerDays","markerDays","ides","nones","kalends","convertToRomanDate","months","acc","abl","countdown","romanNumeralDay","toLowerCase","leapYearModifier","formatYear","notation","formJson","Object","fromEntries","entries","normalizedData","dateString","abbreviatedDate","replace","yearString","abbreviatedYear","createRoot","render","App","addEventListener","event","domElement","document","getElementById","uiElement"],"sourceRoot":""}