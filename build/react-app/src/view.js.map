{"version":3,"file":"react-app/src/view.js","mappings":"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","sources":["webpack://roman-date-converter/./src/react-app/src/App.js","webpack://roman-date-converter/./src/react-app/src/components/Button.js","webpack://roman-date-converter/./src/react-app/src/components/CardSection.js","webpack://roman-date-converter/./src/react-app/src/components/DateConverter.js","webpack://roman-date-converter/./src/react-app/src/components/DateFieldset.js","webpack://roman-date-converter/./src/react-app/src/components/FormCard.js","webpack://roman-date-converter/./src/react-app/src/components/OptionsFieldset.js","webpack://roman-date-converter/./src/react-app/src/components/ResultsCard.js","webpack://roman-date-converter/./src/react-app/src/components/TweetLink.js","webpack://roman-date-converter/./src/react-app/src/utils/dateConversions.js","webpack://roman-date-converter/./src/react-app/src/utils/formatTweetText.js","webpack://roman-date-converter/external window [\"wp\",\"element\"]","webpack://roman-date-converter/webpack/bootstrap","webpack://roman-date-converter/webpack/runtime/compat get default export","webpack://roman-date-converter/webpack/runtime/define property getters","webpack://roman-date-converter/webpack/runtime/hasOwnProperty shorthand","webpack://roman-date-converter/webpack/runtime/make namespace object","webpack://roman-date-converter/./src/react-app/src/view.js"],"sourcesContent":["import DateConverter from \"./components/DateConverter\";\n\nexport default function App() {\n\treturn (\n\t\t<>\n\t\t\t<script\n\t\t\t\tasync\n\t\t\t\tsrc=\"https://platform.twitter.com/widgets.js\"\n\t\t\t\tcharset=\"utf-8\"\n\t\t\t></script>\n\t\t\t<DateConverter />\n\t\t</>\n\t);\n}\n","import { React } from '@wordpress/element';\n\nexport default function Button({ type, buttonText, onClick }) {\n  return (\n    <button \n        type={type} \n        onClick={onClick}>\n        {buttonText}\n    </button>\n  )\n}\n","import { React } from '@wordpress/element';\n\nexport default function CardSection( {title, className, children} ) {\n  return (\n    <section className={className + \" card\"}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n  )\n}\n","import { React, useState } from \"@wordpress/element\";\nimport FormCard from \"./FormCard\";\nimport ResultsCard from \"./ResultsCard\";\nimport {\n\toutputFormattedRomanDate,\n\tnormalizeFormData,\n\tcheckBeforeRomeFounded,\n} from \"../utils/dateConversions\";\n\nexport default function DateConverter() {\n\tconst today = new Date();\n\tconst [month, setMonth] = useState(today.getMonth() + 1);\n\tconst [day, setDay] = useState(today.getDate());\n\tconst [year, setYear] = useState(today.getFullYear());\n\tconst [era, setEra] = useState(\"A.D. / C.E.\");\n\tconst [isDisplayYearChecked, setIsDisplayYearChecked] = useState(true);\n\tconst [yearDisplayOption, setYearDisplayOption] = useState(\"secularNotation\");\n\tconst [isDateSubmitted, setIsDateSubmitted] = useState(false);\n\tconst [submittedFormData, setSubmittedFormData] = useState(null);\n\n\tconst { romanDate, formattedYear } = submittedFormData\n\t\t? outputFormattedRomanDate(submittedFormData)\n\t\t: { romanDate: null, formattedYear: null };\n\n\tfunction handleMonthChange(e) {\n\t\tconst isBeforeRomeFounded = checkBeforeRomeFounded(\n\t\t\tday,\n\t\t\te.target.value,\n\t\t\tyear,\n\t\t\tera\n\t\t);\n\t\tif (isBeforeRomeFounded) {\n\t\t\tsetYearDisplayOption(null);\n\t\t}\n\t\tsetMonth(Number(e.target.value));\n\t}\n\n\tfunction handleDayChange(e) {\n\t\tconst isBeforeRomeFounded = checkBeforeRomeFounded(\n\t\t\te.target.value,\n\t\t\tmonth,\n\t\t\tyear,\n\t\t\tera\n\t\t);\n\t\tif (isBeforeRomeFounded) {\n\t\t\tsetYearDisplayOption(null);\n\t\t}\n\t\tsetDay(Number(e.target.value));\n\t}\n\n\tfunction handleYearChange(e) {\n\t\tconst isBeforeRomeFounded = checkBeforeRomeFounded(\n\t\t\tday,\n\t\t\tmonth,\n\t\t\te.target.value,\n\t\t\tera\n\t\t);\n\t\tif (isBeforeRomeFounded) {\n\t\t\tsetYearDisplayOption(null);\n\t\t}\n\t\tsetYear(Number(e.target.value));\n\t}\n\n\tfunction handleEraChange(e) {\n\t\tconst isBeforeRomeFounded = checkBeforeRomeFounded(\n\t\t\tday,\n\t\t\tmonth,\n\t\t\tyear,\n\t\t\te.target.value\n\t\t);\n\t\tif (isBeforeRomeFounded) {\n\t\t\tsetYearDisplayOption(null);\n\t\t}\n\t\tsetEra(e.target.value);\n\t}\n\n\tfunction handleDisplayYearChange(e) {\n\t\tif (!e.target.checked) {\n\t\t\tsetYearDisplayOption(null);\n\t\t}\n\t\tconst isBeforeRomeFounded = checkBeforeRomeFounded(day, month, year, era);\n\t\tif (isBeforeRomeFounded) {\n\t\t\tsetYearDisplayOption(null);\n\t\t}\n\t\tsetIsDisplayYearChecked(!isDisplayYearChecked);\n\t}\n\n\tfunction handleYearDisplayOptionChange(e) {\n\t\tsetYearDisplayOption(e.target.value);\n\t}\n\n\tfunction handleSubmit(e) {\n\t\t// Prevent the browser from reloading the page\n\t\te.preventDefault();\n\n\t\t// Read the form data\n\t\tconst formData = new FormData(e.target);\n\n\t\t//normalize submitted form data and save in state\n\t\tsetSubmittedFormData(normalizeFormData(formData));\n\n\t\t//Change state so results card is shown instead of form\n\t\tsetIsDateSubmitted(true);\n\t}\n\n\tfunction changeOptions() {\n\t\tsetDay(submittedFormData.day);\n\t\tsetMonth(submittedFormData.month);\n\t\tsetYear(submittedFormData.year);\n\t\tsetEra(submittedFormData.era);\n\t\tsetIsDisplayYearChecked(submittedFormData.displayYear);\n\t\tsetYearDisplayOption(submittedFormData.yearDisplayOption);\n\n\t\t//Change state so form is shown\n\t\tsetIsDateSubmitted(false);\n\t}\n\n\tfunction resetDate() {\n\t\tsetDay(today.getDate());\n\t\tsetMonth(today.getMonth() + 1);\n\t\tsetYear(today.getFullYear());\n\t\tsetEra(\"A.D. / C.E.\");\n\t\tsetIsDisplayYearChecked(true);\n\t\tsetYearDisplayOption(null);\n\t\tsetSubmittedFormData(null);\n\t}\n\n\tfunction handleConvertAnotherDate() {\n\t\tsetIsDateSubmitted(false);\n\t\tresetDate();\n\t}\n\n\tif (!isDateSubmitted) {\n\t\treturn (\n\t\t\t<FormCard\n\t\t\t\tmonth={month}\n\t\t\t\thandleMonthChange={handleMonthChange}\n\t\t\t\tday={day}\n\t\t\t\thandleDayChange={handleDayChange}\n\t\t\t\tyear={year}\n\t\t\t\thandleYearChange={handleYearChange}\n\t\t\t\tera={era}\n\t\t\t\thandleEraChange={handleEraChange}\n\t\t\t\tisBeforeRomeFounded={checkBeforeRomeFounded(day, month, year, era)}\n\t\t\t\tisDisplayYearChecked={isDisplayYearChecked}\n\t\t\t\thandleDisplayYearChange={handleDisplayYearChange}\n\t\t\t\tyearDisplayOption={yearDisplayOption}\n\t\t\t\thandleYearDisplayOptionChange={handleYearDisplayOptionChange}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<ResultsCard\n\t\t\t\tromanDate={romanDate}\n\t\t\t\tformattedYear={formattedYear}\n\t\t\t\tchangeOptions={changeOptions}\n\t\t\t\thandleConvertAnotherDate={handleConvertAnotherDate}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { React } from '@wordpress/element';\nimport { checkLeapYear } from '../utils/dateConversions'\n\nexport default function DateFieldset({ month, day, year, handleMonthChange, handleDayChange, handleYearChange, era, handleEraChange }) {\n\n  function calcDaysInMonth() {\n    let daysCount = 31\n    if (month === 4 || month === 6 || month === 9 || month === 11) {\n        daysCount = 30\n    }\n    if (month === 2) {\n        daysCount = !checkLeapYear(year) ? 28 : 29\n    } \n    return daysCount\n  }  \n  const dayOptions = Array.from(\n    {length: calcDaysInMonth()}, \n    (_, i) => (\n        <option key={i + 1} value={i + 1}>{i + 1}</option>\n    )\n  )\n\n  return (\n    <fieldset>\n        {/* add a legend */}\n        <label><span className=\"sr-only\">Month</span>\n            <select name=\"month\" value={month} onChange={handleMonthChange}>\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n            </select>\n        </label>\n        <label><span className=\"sr-only\">Day</span>\n            <select name=\"day\" value={day} onChange={handleDayChange}>\n                {dayOptions}\n            </select>\n        </label>\n        <label><span className=\"sr-only\">Year</span>\n            <input name=\"year\" \n                type=\"number\" min=\"1\" max=\"3999\" step=\"1\" value={year} \n                onChange={handleYearChange}>\n            </input>\n        </label>\n        <label><span className=\"sr-only\">Era</span>\n            <select name=\"era\" \n                    value={era} \n                    onChange={handleEraChange}>\n                <option value=\"A.D. / C.E.\">A.D. / C.E.</option>\n                <option value=\"B.C. / B.C.E.\">B.C. / B.C.E.</option>\n            </select>\n        </label>\n    </fieldset>\n  )\n}\n","import React from \"@wordpress/element\";\nimport CardSection from \"./CardSection\";\nimport DateFieldset from \"./DateFieldset\";\nimport OptionsFieldset from \"./OptionsFieldset\";\nimport Button from \"./Button\";\n\nexport default function FormCard({\n\tmonth,\n\thandleMonthChange,\n\tday,\n\thandleDayChange,\n\tyear,\n\thandleYearChange,\n\tera,\n\thandleEraChange,\n\tisBeforeRomeFounded,\n\tisDisplayYearChecked,\n\thandleDisplayYearChange,\n\tyearDisplayOption,\n\thandleYearDisplayOptionChange,\n\thandleSubmit,\n}) {\n\treturn (\n\t\t<CardSection className=\"form-card\" title=\"Find the Roman date for:\">\n\t\t\t<form method=\"post\" onSubmit={handleSubmit}>\n\t\t\t\t<DateFieldset\n\t\t\t\t\tmonth={month}\n\t\t\t\t\thandleMonthChange={handleMonthChange}\n\t\t\t\t\tday={day}\n\t\t\t\t\thandleDayChange={handleDayChange}\n\t\t\t\t\tyear={year}\n\t\t\t\t\thandleYearChange={handleYearChange}\n\t\t\t\t\tera={era}\n\t\t\t\t\thandleEraChange={handleEraChange}\n\t\t\t\t/>\n\t\t\t\t<OptionsFieldset\n\t\t\t\t\tisBeforeRomeFounded={isBeforeRomeFounded}\n\t\t\t\t\tisDisplayYearChecked={isDisplayYearChecked}\n\t\t\t\t\thandleDisplayYearChange={handleDisplayYearChange}\n\t\t\t\t\tyearDisplayOption={yearDisplayOption}\n\t\t\t\t\thandleYearDisplayOptionChange={handleYearDisplayOptionChange}\n\t\t\t\t/>\n\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t<Button type=\"submit\" buttonText=\"Submit\" />\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</CardSection>\n\t);\n}\n","import { React } from '@wordpress/element';\n\nexport default function OptionsFieldset({ \n    isBeforeRomeFounded, \n    isDisplayYearChecked, \n    handleDisplayYearChange,\n    yearDisplayOption,\n    handleYearDisplayOptionChange\n}) {\n\n    const yearDisplayOptionsRadio = (\n        <>\n            <label>\n                <input required \n                    type=\"radio\" \n                    name=\"yearDisplayOption\" \n                    value=\"secularNotation\"\n                    checked={yearDisplayOption === \"secularNotation\"}\n                    onChange={handleYearDisplayOptionChange}></input>\n                display year in secular notation\n            </label>\n            <label>\n                <input required \n                    type=\"radio\" \n                    name=\"yearDisplayOption\" \n                    value=\"christianNotation\"\n                    checked={yearDisplayOption === \"christianNotation\"}\n                    onChange={handleYearDisplayOptionChange}></input>\n                display year in Christian notation\n            </label>\n            <label>\n                <input required \n                    type=\"radio\" \n                    name=\"yearDisplayOption\" \n                    value=\"AUCNotation\"\n                    checked={yearDisplayOption === \"AUCNotation\"}\n                    onChange={handleYearDisplayOptionChange}\n                    disabled={isBeforeRomeFounded || !isDisplayYearChecked}>\n                </input>\n                display year <span className=\"italics\">ab urbe condita</span>\n            </label>\n        </>\n    )  \n\n  return (\n    <fieldset className=\"options-fieldset\">\n        {/* add a legend */}\n        <label>\n            <input type=\"checkbox\" name=\"displayYear\" \n                onChange={handleDisplayYearChange}\n                checked={isDisplayYearChecked}></input>\n            display year\n        </label>\n        {isDisplayYearChecked ? yearDisplayOptionsRadio : null}\n    </fieldset>\n  )\n}\n","import { React, useState } from \"@wordpress/element\";\nimport CardSection from \"./CardSection\";\nimport Button from \"./Button\";\nimport TweetLink from \"./TweetLink\";\nimport { abbreviateDate, abbreviateYear } from \"../utils/dateConversions\";\n\nexport default function ResultsCard({\n\tromanDate,\n\tformattedYear,\n\tchangeOptions,\n\thandleConvertAnotherDate,\n}) {\n\tconst [isAbbreviatedChecked, setIsAbbreviatedChecked] = useState(false);\n\n\t//do I need to make these into state for them to update appropriately and cause the Tweet button to rerender? or no?\n\tlet dateString = isAbbreviatedChecked ? abbreviateDate(romanDate) : romanDate;\n\tlet yearString = isAbbreviatedChecked\n\t\t? abbreviateYear(formattedYear)\n\t\t: formattedYear;\n\n\treturn (\n\t\t<CardSection className=\"results-card\" title=\"Roman date:\">\n\t\t\t<div>\n\t\t\t\t<p>{dateString}</p>\n\t\t\t\t<p>{yearString}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"abbreviated\"\n\t\t\t\t\t\tonChange={(e) => setIsAbbreviatedChecked(!isAbbreviatedChecked)}\n\t\t\t\t\t></input>\n\t\t\t\t\tdisplay abbreviated date\n\t\t\t\t</label>\n\t\t\t\t<TweetLink dateString={dateString} yearString={yearString} />\n\t\t\t</div>\n\t\t\t<div className=\"btn-group\">\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tbuttonText=\"Change options\"\n\t\t\t\t\tonClick={changeOptions}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tbuttonText=\"Convert another date\"\n\t\t\t\t\tonClick={handleConvertAnotherDate}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</CardSection>\n\t);\n}\n","import React from \"@wordpress/element\";\nimport { formatTweetText } from \"../utils/formatTweetText\";\n\nexport default function TweetLink({ dateString, yearString }) {\n\tlet tweetTextParamValue = formatTweetText(dateString, yearString);\n\n\treturn (\n\t\t<>\n\t\t\t<a\n\t\t\t\thref={`https://twitter.com/intent/tweet?text=${tweetTextParamValue}&screen_name=salvi_sitis&ref_src=twsrc%5Etfw`}\n\t\t\t\tclass=\"twitter-share-button block\"\n\t\t\t\tdata-show-count=\"false\"\n\t\t\t>\n\t\t\t\tTweet\n\t\t\t</a>\n\t\t</>\n\t);\n}\n","function integerToRomanNumeral(num) {\n    //max integer you can express in Roman numerals without a line over is 3999\n    const map = {\n      M: 1000,\n      CM: 900,\n      D: 500,\n      CD: 400,\n      C: 100,\n      XC: 90,\n      L: 50,\n      XL: 40,\n      X: 10,\n      IX: 9,\n      V: 5,\n      IV: 4,\n      I: 1,\n    };\n    let result = '';\n    \n    for (let key in map) {  \n      const repeatCounter = Math.floor(num / map[key]);\n      \n      if (repeatCounter !== 0) {\n        result += key.repeat(repeatCounter);\n      }\n      \n      num %= map[key];\n      \n      if (num === 0) return result;\n    }\n    \n    return result;\n}\n\nfunction calculateMarkerDays(day, month, year) {\n    // calculate the Ides and Nones for the input month, and the Kalends for the next month\n    const markerDays = {}\n\n    // set the Ides and Nones for the month\n    switch(month) {\n        // March, July, October, May, the Ides are on the 15th day\n        case 3: \n        case 5: \n        case 7: \n        case 10: \n            markerDays.ides = 15;\n            markerDays.nones = 7;\n            break;\n        default: \n            markerDays.ides = 13;\n            markerDays.nones = 5;\n            break;\n    }\n\n    // set the Kalends for the next month; for easier math, this is the days in the month + 1\n    switch(month) {\n        // 30 days have Sep, Apr, Jun, and Nov\n        case 4:\n        case 6: \n        case 9: \n        case 11: \n            markerDays.kalends = 31;\n            break;\n        // The Roman calendar inserts the leap day after Feb 24th - only dates after that will be affected\n        case 2: \n            markerDays.kalends = checkLeapYear(year) && day > 24 ? 30 : 29\n            break;\n        default: \n            markerDays.kalends = 32;\n            break;\n    }\n    return markerDays\n}\n\nfunction convertToRomanDate(day, month, year) {\n    //create a dictionary of months with accusative and ablative forms\n    const months = {\n        1: { acc: \"Ianuarias\", abl: \"Ianuariis\" }, \n        2: { acc: \"Februarias\", abl: \"Februariis\" } ,\n        3: { acc: \"Martias\", abl: \"Martiis\"},  \n        4: { acc: \"Apriles\", abl: \"Aprilibus\"},  \n        5: { acc: \"Maias\", abl: \"Maiis\"},\n        6: { acc: \"Iunias\", abl: \"Iuniis\"}, \n        7: { acc: \"Iulias\", abl: \"Iuliis\"},\n        8: { acc: \"Augustas\", abl: \"Augustis\"},\n        9: { acc: \"Septembres\", abl: \"Septembribus\"},\n        10: { acc: \"Octobres\", abl: \"Octobribus\"},\n        11: { acc: \"Novembres\", abl: \"Novembribus\"},\n        12: { acc: \"Decembres\", abl: \"Decembribus\"},    \n    }\n\n    // calculate the Ides and Nones for the input month, and the Kalends for the next month\n    const markerDays = calculateMarkerDays(day, month, year)\n\n    //calculate the Roman date string (month + day)\n    let romanDate\n    switch(day) {\n        //start with the days that fall on the Kalends, Ides, Nones\n        case 1: \n            romanDate = `Kalendis ${months[month].abl}`;\n            break;\n        case markerDays.nones: \n            romanDate =`Nonis ${months[month].abl}`;\n            break;\n        case markerDays.ides: \n            romanDate =`Idibus ${months[month].abl}`;\n            break;\n\n        // Other days will countdown to the next epoch\n\t\tdefault:\n            //calculate the countdown and start the romanDate string\n            let countdown\n            if (day < markerDays.nones) {\n                countdown = markerDays.nones - day + 1  // countdown Roman style, with inclusive counting\n                romanDate =`Nonas ${months[month].acc}`;    // start the romanDate string\n            } else if (day < markerDays.ides) {\n                countdown = markerDays.ides - day + 1  // countdown Roman style\n                romanDate =`Idus ${months[month].acc}`;    // start the romanDate string\n            } else {\n                // if the date is after the Ides, count down to the Kalends of the next month\n                countdown = markerDays.kalends - day + 1  // countdown Roman style\n                romanDate =`Kalendas ${months[month === 12 ? 1 : month + 1].acc}`;    // start the romanDate string\n            }\n\n            // pridie (the day before) is 2 days before the marker day \n            if (countdown === 2) { \n                romanDate = `pridie ${romanDate}`\n            } else {\n                const romanNumeralDay = integerToRomanNumeral(countdown).toLowerCase()\n\n                // normally we just count down, but Feb 25 of a leap year is weird- it's called \"ante diem bis vi Kalendas Martias...\"\n                const leapYearModifier = checkLeapYear(year) && day === 25 ? 'bis ' : ''\n\n                romanDate = `ante diem ${leapYearModifier}${romanNumeralDay} ${romanDate}`\n            }  \n            break;\n    }\n    return romanDate\n}\n\nfunction formatYear(year, era, yearDisplayOption) {\n    let notation \n\n    if (yearDisplayOption === 'AUCNotation') {\n        if (era === 'A.D. / C.E.') { \n            year = year + 753 \n        } else {\n            year = 754 - year\n        }\n        notation = 'ab urbe condita'\n    } \n    //otherwise, it's B.C or A.D, in secular or Christian notation - 4 possibilities\n    if (yearDisplayOption === 'secularNotation') {\n        notation = (era === 'B.C. / B.C.E.') ? 'ante aeram vulgarem' : 'aerae vulgaris'\n    }\n\n    if (yearDisplayOption === 'christianNotation') {\n        notation = (era === 'B.C. / B.C.E.') ? 'ante Christum natum' : 'post Christum natum'\n    }\n\n    return `anno ${integerToRomanNumeral(year)} ${notation}`\n}\n\nexport function checkLeapYear(year) {\n    if (year % 4 !== 0) { return false }\n    // a year that is evenly divisible by 100 (for example, 1900) is a leap year only if it is also evenly divisible by 400.\n    if (year % 100 === 0) { \n        return year % 400 === 0 ? true : false\n    }\n    return true\n}\n\nexport function checkBeforeRomeFounded(day, month, year, era) {\n    month = Number(month)\n    day = Number(day)\n\n    //if it's C.E., it's definitely not before the founding\n    if (era === 'A.D. / C.E.') { return false }\n\n    //if it's B.C.E. and the year is greater/earlier than 753, it's before the founding\n    if (year > 753) { return true }\n    if (year < 753) { return false}\n\n    if (year === 753) {\n        if (month < 4) { \n            return true \n        } else if (month > 4) {\n            return false \n        } else if (day < 21) {   //if we're in April and the day is before April 21, it's before\n            return true \n        } else { \n            return false \n        }\n    }\n}\n\nexport function normalizeFormData(formData) {\n    const formJson = Object.fromEntries(formData.entries());\n    const normalizedData = { ...formJson }\n\n    normalizedData.day = Number(normalizedData.day)\n    normalizedData.month = Number(normalizedData.month)\n    normalizedData.year = Number(normalizedData.year)\n    \n    //by default in HTML, if a checkbox is checked, the data is submitted with the value \"on\"; else no data for that checkbox is sent. \n    normalizedData.displayYear ?  normalizedData.displayYear = true : normalizedData.displayYear = false\n    if (!normalizedData.yearDisplayOption) { normalizedData.yearDisplayOption = null }\n    \n    return normalizedData\n}\n\nexport function abbreviateDate(dateString) {\n    let abbreviatedDate = dateString\n\n    abbreviatedDate = abbreviatedDate.replace('ante diem', 'a.d.')\n\n    //abbreviate day/month; remember to include periods\n    abbreviatedDate = abbreviatedDate.replace(/(prid|Kal|Id|Non|Ian|Feb|Mart|Apr|Aug|Sept|Oct|Nov|Dec)\\w+/g, '$1.')\n\n    return abbreviatedDate\n}\n\nexport function abbreviateYear(yearString) {\n    let abbreviatedYear = yearString\n\n    //abbreviate year notation \n    abbreviatedYear = abbreviatedYear.replace('ab urbe condita', 'A.U.C.')\n    abbreviatedYear = abbreviatedYear.replace('ante aeram vulgarem', 'ante aer. vulg.')\n    abbreviatedYear = abbreviatedYear.replace('aerae vulgaris', 'aer. vulg.')\n    abbreviatedYear = abbreviatedYear.replace('ante Christum natum', 'a.C.n.')\n    abbreviatedYear = abbreviatedYear.replace('post Christum natum', 'p.C.n.')\n\n    return abbreviatedYear\n}\n\nexport function outputFormattedRomanDate(formData) {\n    const { day, \n            displayYear, \n            era, \n            month, \n            year, \n            yearDisplayOption } = formData\n    \n    const romanDate = convertToRomanDate(day, month, year)\n\n    const formattedYear = displayYear ? formatYear(year, era, yearDisplayOption) : ''\n\n    return {\n        romanDate: romanDate, \n        formattedYear: formattedYear\n    }\n}","export function formatTweetText(romanDate, formattedYear) {\n\tlet romanDateParamString = romanDate.replaceAll(\" \", \"%20\");\n\tlet formattedYearParamString = formattedYear\n\t\t? \",\" + formattedYear.replaceAll(\" \", \"%20\")\n\t\t: \"\";\n\n\tlet textParam = `${romanDateParamString}${formattedYearParamString}`;\n\treturn textParam;\n}\n","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot, render, createElement } from \"@wordpress/element\";\nimport App from \"./App\";\n\naddEventListener(\"DOMContentLoaded\", (event) => {\n\tconst domElement = document.getElementById(\"react-app\");\n\tconst uiElement = createElement(App);\n\n\tif (createRoot) {\n\t\tcreateRoot(domElement).render(uiElement);\n\t} else {\n\t\trender(uiElement, domElement);\n\t}\n});\n"],"names":["DateConverter","App","createElement","Fragment","async","src","charset","React","Button","_ref","type","buttonText","onClick","CardSection","title","className","children","useState","FormCard","ResultsCard","outputFormattedRomanDate","normalizeFormData","checkBeforeRomeFounded","today","Date","month","setMonth","getMonth","day","setDay","getDate","year","setYear","getFullYear","era","setEra","isDisplayYearChecked","setIsDisplayYearChecked","yearDisplayOption","setYearDisplayOption","isDateSubmitted","setIsDateSubmitted","submittedFormData","setSubmittedFormData","romanDate","formattedYear","handleMonthChange","e","isBeforeRomeFounded","target","value","Number","handleDayChange","handleYearChange","handleEraChange","handleDisplayYearChange","checked","handleYearDisplayOptionChange","handleSubmit","preventDefault","formData","FormData","changeOptions","displayYear","resetDate","handleConvertAnotherDate","checkLeapYear","DateFieldset","calcDaysInMonth","daysCount","dayOptions","Array","from","length","_","i","key","name","onChange","min","max","step","OptionsFieldset","method","onSubmit","yearDisplayOptionsRadio","required","disabled","TweetLink","abbreviateDate","abbreviateYear","isAbbreviatedChecked","setIsAbbreviatedChecked","dateString","yearString","formatTweetText","tweetTextParamValue","href","class","integerToRomanNumeral","num","map","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","result","repeatCounter","Math","floor","repeat","calculateMarkerDays","markerDays","ides","nones","kalends","convertToRomanDate","months","acc","abl","countdown","romanNumeralDay","toLowerCase","leapYearModifier","formatYear","notation","formJson","Object","fromEntries","entries","normalizedData","abbreviatedDate","replace","abbreviatedYear","romanDateParamString","replaceAll","formattedYearParamString","textParam","createRoot","render","addEventListener","event","domElement","document","getElementById","uiElement"],"sourceRoot":""}